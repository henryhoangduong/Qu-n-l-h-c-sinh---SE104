{"ast":null,"code":"// import React from \"react\";\n// import {\n//   Navbar,\n//   MobileNav,\n//   Typography,\n//   Button,\n//   Menu,\n//   MenuHandler,\n//   MenuList,\n//   MenuItem,\n//   Avatar,\n//   Card,\n//   IconButton,\n// } from \"@material-tailwind/react\";\n// import {\n//   CubeTransparentIcon,\n//   UserCircleIcon,\n//   CodeBracketSquareIcon,\n//   Square3Stack3DIcon,\n//   ChevronDownIcon,\n//   Cog6ToothIcon,\n//   InboxArrowDownIcon,\n//   LifebuoyIcon,\n//   PowerIcon,\n//   RocketLaunchIcon,\n//   Bars2Icon,\n// } from \"@heroicons/react/24/solid\";\n\n// // profile menu component\n// const profileMenuItems = [\n//   {\n//     label: \"My Profile\",\n//     icon: UserCircleIcon,\n//   },\n//   {\n//     label: \"Edit Profile\",\n//     icon: Cog6ToothIcon,\n//   },\n//   {\n//     label: \"Inbox\",\n//     icon: InboxArrowDownIcon,\n//   },\n//   {\n//     label: \"Help\",\n//     icon: LifebuoyIcon,\n//   },\n//   {\n//     label: \"Sign Out\",\n//     icon: PowerIcon,\n//   },\n// ];\n\n// function ProfileMenu() {\n//   const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n//   const closeMenu = () => setIsMenuOpen(false);\n\n//   return (\n//     <Menu open={isMenuOpen} handler={setIsMenuOpen} placement=\"bottom-end\">\n//       <MenuHandler>\n//         <Button\n//           variant=\"text\"\n//           color=\"blue-gray\"\n//           className=\"flex items-center gap-1 rounded-full py-0.5 pr-2 pl-0.5 lg:ml-auto\"\n//         >\n//           <Avatar\n//             variant=\"circular\"\n//             size=\"sm\"\n//             alt=\"tania andrew\"\n//             className=\"border border-gray-900 p-0.5\"\n//             src=\"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1480&q=80\"\n//           />\n//           <ChevronDownIcon\n//             strokeWidth={2.5}\n//             className={`h-3 w-3 transition-transform ${\n//               isMenuOpen ? \"rotate-180\" : \"\"\n//             }`}\n//           />\n//         </Button>\n//       </MenuHandler>\n//       <MenuList className=\"p-1\">\n//         {profileMenuItems.map(({ label, icon }, key) => {\n//           const isLastItem = key === profileMenuItems.length - 1;\n//           return (\n//             <MenuItem\n//               key={label}\n//               onClick={closeMenu}\n//               className={`flex items-center gap-2 rounded ${\n//                 isLastItem\n//                   ? \"hover:bg-red-500/10 focus:bg-red-500/10 active:bg-red-500/10\"\n//                   : \"\"\n//               }`}\n//             >\n//               {React.createElement(icon, {\n//                 className: `h-4 w-4 ${isLastItem ? \"text-red-500\" : \"\"}`,\n//                 strokeWidth: 2,\n//               })}\n//               <Typography\n//                 as=\"span\"\n//                 variant=\"small\"\n//                 className=\"font-normal\"\n//                 color={isLastItem ? \"red\" : \"inherit\"}\n//               >\n//                 {label}\n//               </Typography>\n//             </MenuItem>\n//           );\n//         })}\n//       </MenuList>\n//     </Menu>\n//   );\n// }\n\n// // nav list menu\n// const navListMenuItems = [\n//   {\n//     title: \"@material-tailwind/html\",\n//     description:\n//       \"Learn how to use @material-tailwind/html, packed with rich components and widgets.\",\n//   },\n//   {\n//     title: \"@material-tailwind/react\",\n//     description:\n//       \"Learn how to use @material-tailwind/react, packed with rich components for React.\",\n//   },\n//   {\n//     title: \"Material Tailwind PRO\",\n//     description:\n//       \"A complete set of UI Elements for building faster websites in less time.\",\n//   },\n// ];\n\n// function NavListMenu() {\n//   const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n//   const renderItems = navListMenuItems.map(({ title, description }) => (\n//     <a href=\"#\" key={title}>\n//       <MenuItem>\n//         <Typography variant=\"h6\" color=\"blue-gray\" className=\"mb-1\">\n//           {title}\n//         </Typography>\n//         <Typography variant=\"small\" color=\"gray\" className=\"font-normal\">\n//           {description}\n//         </Typography>\n//       </MenuItem>\n//     </a>\n//   ));\n\n//   return (\n//     <React.Fragment>\n//       <Menu allowHover open={isMenuOpen} handler={setIsMenuOpen}>\n//         <MenuHandler>\n//           <Typography as=\"a\" href=\"#\" variant=\"small\" className=\"font-normal\">\n//             <MenuItem className=\"hidden items-center gap-2 font-medium text-blue-gray-900 lg:flex lg:rounded-full\">\n//               <Square3Stack3DIcon className=\"h-[18px] w-[18px] text-blue-gray-500\" />{\" \"}\n//               Pages{\" \"}\n//               <ChevronDownIcon\n//                 strokeWidth={2}\n//                 className={`h-3 w-3 transition-transform ${\n//                   isMenuOpen ? \"rotate-180\" : \"\"\n//                 }`}\n//               />\n//             </MenuItem>\n//           </Typography>\n//         </MenuHandler>\n//         <MenuList className=\"hidden w-[36rem] grid-cols-7 gap-3 overflow-visible lg:grid\">\n//           <Card\n//             color=\"blue\"\n//             shadow={false}\n//             variant=\"gradient\"\n//             className=\"col-span-3 grid h-full w-full place-items-center rounded-md\"\n//           >\n//             <RocketLaunchIcon strokeWidth={1} className=\"h-28 w-28\" />\n//           </Card>\n//           <ul className=\"col-span-4 flex w-full flex-col gap-1\">\n//             {renderItems}\n//           </ul>\n//         </MenuList>\n//       </Menu>\n//       <MenuItem className=\"flex items-center gap-2 font-medium text-blue-gray-900 lg:hidden\">\n//         <Square3Stack3DIcon className=\"h-[18px] w-[18px] text-blue-gray-500\" />{\" \"}\n//         Pages{\" \"}\n//       </MenuItem>\n//       <ul className=\"ml-6 flex w-full flex-col gap-1 lg:hidden\">\n//         {renderItems}\n//       </ul>\n//     </React.Fragment>\n//   );\n// }\n\n// // nav list component\n// const navListItems = [\n//   {\n//     label: \"Account\",\n//     icon: UserCircleIcon,\n//   },\n//   {\n//     label: \"Blocks\",\n//     icon: CubeTransparentIcon,\n//   },\n//   {\n//     label: \"Docs\",\n//     icon: CodeBracketSquareIcon,\n//   },\n// ];\n\n// function NavList() {\n//   return (\n//     <ul className=\"mt-2 mb-4 flex flex-col gap-2 lg:mb-0 lg:mt-0 lg:flex-row lg:items-center\">\n//       <NavListMenu />\n//       {navListItems.map(({ label, icon }, key) => (\n//         <Typography\n//           key={label}\n//           as=\"a\"\n//           href=\"#\"\n//           variant=\"small\"\n//           color=\"gray\"\n//           className=\"font-medium text-blue-gray-500\"\n//         >\n//           <MenuItem className=\"flex items-center gap-2 lg:rounded-full\">\n//             {React.createElement(icon, { className: \"h-[18px] w-[18px]\" })}{\" \"}\n//             <span className=\"text-gray-900\"> {label}</span>\n//           </MenuItem>\n//         </Typography>\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function ComplexNavbar() {\n//   const [isNavOpen, setIsNavOpen] = React.useState(false);\n\n//   const toggleIsNavOpen = () => setIsNavOpen((cur) => !cur);\n\n//   React.useEffect(() => {\n//     window.addEventListener(\n//       \"resize\",\n//       () => window.innerWidth >= 960 && setIsNavOpen(false),\n//     );\n//   }, []);\n\n//   return (\n//     <Navbar className=\"mx-auto max-w-screen-xl p-2 lg:rounded-full lg:pl-6\">\n//       <div className=\"relative mx-auto flex items-center justify-between text-blue-gray-900\">\n//         <Typography\n//           as=\"a\"\n//           href=\"#\"\n//           className=\"mr-4 ml-2 cursor-pointer py-1.5 font-medium\"\n//         >\n//           Material Tailwind\n//         </Typography>\n//         <div className=\"hidden lg:block\">\n//           <NavList />\n//         </div>\n//         <IconButton\n//           size=\"sm\"\n//           color=\"blue-gray\"\n//           variant=\"text\"\n//           onClick={toggleIsNavOpen}\n//           className=\"ml-auto mr-2 lg:hidden\"\n//         >\n//           <Bars2Icon className=\"h-6 w-6\" />\n//         </IconButton>\n\n//         <Button size=\"sm\" variant=\"text\">\n//           <span>Log In</span>\n//         </Button>\n//         <ProfileMenu />\n//       </div>\n//       <MobileNav open={isNavOpen} className=\"overflow-scroll\">\n//         <NavList />\n//       </MobileNav>\n//     </Navbar>\n//   );\n// }\n\n// export default ComplexNavbar;","map":{"version":3,"names":[],"sources":["D:/USER/Student-Management-System---SE104/frontend/src/layouts/Components/NavBar/NavBar.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import {\r\n//   Navbar,\r\n//   MobileNav,\r\n//   Typography,\r\n//   Button,\r\n//   Menu,\r\n//   MenuHandler,\r\n//   MenuList,\r\n//   MenuItem,\r\n//   Avatar,\r\n//   Card,\r\n//   IconButton,\r\n// } from \"@material-tailwind/react\";\r\n// import {\r\n//   CubeTransparentIcon,\r\n//   UserCircleIcon,\r\n//   CodeBracketSquareIcon,\r\n//   Square3Stack3DIcon,\r\n//   ChevronDownIcon,\r\n//   Cog6ToothIcon,\r\n//   InboxArrowDownIcon,\r\n//   LifebuoyIcon,\r\n//   PowerIcon,\r\n//   RocketLaunchIcon,\r\n//   Bars2Icon,\r\n// } from \"@heroicons/react/24/solid\";\r\n \r\n// // profile menu component\r\n// const profileMenuItems = [\r\n//   {\r\n//     label: \"My Profile\",\r\n//     icon: UserCircleIcon,\r\n//   },\r\n//   {\r\n//     label: \"Edit Profile\",\r\n//     icon: Cog6ToothIcon,\r\n//   },\r\n//   {\r\n//     label: \"Inbox\",\r\n//     icon: InboxArrowDownIcon,\r\n//   },\r\n//   {\r\n//     label: \"Help\",\r\n//     icon: LifebuoyIcon,\r\n//   },\r\n//   {\r\n//     label: \"Sign Out\",\r\n//     icon: PowerIcon,\r\n//   },\r\n// ];\r\n \r\n// function ProfileMenu() {\r\n//   const [isMenuOpen, setIsMenuOpen] = React.useState(false);\r\n \r\n//   const closeMenu = () => setIsMenuOpen(false);\r\n \r\n//   return (\r\n//     <Menu open={isMenuOpen} handler={setIsMenuOpen} placement=\"bottom-end\">\r\n//       <MenuHandler>\r\n//         <Button\r\n//           variant=\"text\"\r\n//           color=\"blue-gray\"\r\n//           className=\"flex items-center gap-1 rounded-full py-0.5 pr-2 pl-0.5 lg:ml-auto\"\r\n//         >\r\n//           <Avatar\r\n//             variant=\"circular\"\r\n//             size=\"sm\"\r\n//             alt=\"tania andrew\"\r\n//             className=\"border border-gray-900 p-0.5\"\r\n//             src=\"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1480&q=80\"\r\n//           />\r\n//           <ChevronDownIcon\r\n//             strokeWidth={2.5}\r\n//             className={`h-3 w-3 transition-transform ${\r\n//               isMenuOpen ? \"rotate-180\" : \"\"\r\n//             }`}\r\n//           />\r\n//         </Button>\r\n//       </MenuHandler>\r\n//       <MenuList className=\"p-1\">\r\n//         {profileMenuItems.map(({ label, icon }, key) => {\r\n//           const isLastItem = key === profileMenuItems.length - 1;\r\n//           return (\r\n//             <MenuItem\r\n//               key={label}\r\n//               onClick={closeMenu}\r\n//               className={`flex items-center gap-2 rounded ${\r\n//                 isLastItem\r\n//                   ? \"hover:bg-red-500/10 focus:bg-red-500/10 active:bg-red-500/10\"\r\n//                   : \"\"\r\n//               }`}\r\n//             >\r\n//               {React.createElement(icon, {\r\n//                 className: `h-4 w-4 ${isLastItem ? \"text-red-500\" : \"\"}`,\r\n//                 strokeWidth: 2,\r\n//               })}\r\n//               <Typography\r\n//                 as=\"span\"\r\n//                 variant=\"small\"\r\n//                 className=\"font-normal\"\r\n//                 color={isLastItem ? \"red\" : \"inherit\"}\r\n//               >\r\n//                 {label}\r\n//               </Typography>\r\n//             </MenuItem>\r\n//           );\r\n//         })}\r\n//       </MenuList>\r\n//     </Menu>\r\n//   );\r\n// }\r\n \r\n// // nav list menu\r\n// const navListMenuItems = [\r\n//   {\r\n//     title: \"@material-tailwind/html\",\r\n//     description:\r\n//       \"Learn how to use @material-tailwind/html, packed with rich components and widgets.\",\r\n//   },\r\n//   {\r\n//     title: \"@material-tailwind/react\",\r\n//     description:\r\n//       \"Learn how to use @material-tailwind/react, packed with rich components for React.\",\r\n//   },\r\n//   {\r\n//     title: \"Material Tailwind PRO\",\r\n//     description:\r\n//       \"A complete set of UI Elements for building faster websites in less time.\",\r\n//   },\r\n// ];\r\n \r\n// function NavListMenu() {\r\n//   const [isMenuOpen, setIsMenuOpen] = React.useState(false);\r\n \r\n//   const renderItems = navListMenuItems.map(({ title, description }) => (\r\n//     <a href=\"#\" key={title}>\r\n//       <MenuItem>\r\n//         <Typography variant=\"h6\" color=\"blue-gray\" className=\"mb-1\">\r\n//           {title}\r\n//         </Typography>\r\n//         <Typography variant=\"small\" color=\"gray\" className=\"font-normal\">\r\n//           {description}\r\n//         </Typography>\r\n//       </MenuItem>\r\n//     </a>\r\n//   ));\r\n \r\n//   return (\r\n//     <React.Fragment>\r\n//       <Menu allowHover open={isMenuOpen} handler={setIsMenuOpen}>\r\n//         <MenuHandler>\r\n//           <Typography as=\"a\" href=\"#\" variant=\"small\" className=\"font-normal\">\r\n//             <MenuItem className=\"hidden items-center gap-2 font-medium text-blue-gray-900 lg:flex lg:rounded-full\">\r\n//               <Square3Stack3DIcon className=\"h-[18px] w-[18px] text-blue-gray-500\" />{\" \"}\r\n//               Pages{\" \"}\r\n//               <ChevronDownIcon\r\n//                 strokeWidth={2}\r\n//                 className={`h-3 w-3 transition-transform ${\r\n//                   isMenuOpen ? \"rotate-180\" : \"\"\r\n//                 }`}\r\n//               />\r\n//             </MenuItem>\r\n//           </Typography>\r\n//         </MenuHandler>\r\n//         <MenuList className=\"hidden w-[36rem] grid-cols-7 gap-3 overflow-visible lg:grid\">\r\n//           <Card\r\n//             color=\"blue\"\r\n//             shadow={false}\r\n//             variant=\"gradient\"\r\n//             className=\"col-span-3 grid h-full w-full place-items-center rounded-md\"\r\n//           >\r\n//             <RocketLaunchIcon strokeWidth={1} className=\"h-28 w-28\" />\r\n//           </Card>\r\n//           <ul className=\"col-span-4 flex w-full flex-col gap-1\">\r\n//             {renderItems}\r\n//           </ul>\r\n//         </MenuList>\r\n//       </Menu>\r\n//       <MenuItem className=\"flex items-center gap-2 font-medium text-blue-gray-900 lg:hidden\">\r\n//         <Square3Stack3DIcon className=\"h-[18px] w-[18px] text-blue-gray-500\" />{\" \"}\r\n//         Pages{\" \"}\r\n//       </MenuItem>\r\n//       <ul className=\"ml-6 flex w-full flex-col gap-1 lg:hidden\">\r\n//         {renderItems}\r\n//       </ul>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n \r\n// // nav list component\r\n// const navListItems = [\r\n//   {\r\n//     label: \"Account\",\r\n//     icon: UserCircleIcon,\r\n//   },\r\n//   {\r\n//     label: \"Blocks\",\r\n//     icon: CubeTransparentIcon,\r\n//   },\r\n//   {\r\n//     label: \"Docs\",\r\n//     icon: CodeBracketSquareIcon,\r\n//   },\r\n// ];\r\n \r\n// function NavList() {\r\n//   return (\r\n//     <ul className=\"mt-2 mb-4 flex flex-col gap-2 lg:mb-0 lg:mt-0 lg:flex-row lg:items-center\">\r\n//       <NavListMenu />\r\n//       {navListItems.map(({ label, icon }, key) => (\r\n//         <Typography\r\n//           key={label}\r\n//           as=\"a\"\r\n//           href=\"#\"\r\n//           variant=\"small\"\r\n//           color=\"gray\"\r\n//           className=\"font-medium text-blue-gray-500\"\r\n//         >\r\n//           <MenuItem className=\"flex items-center gap-2 lg:rounded-full\">\r\n//             {React.createElement(icon, { className: \"h-[18px] w-[18px]\" })}{\" \"}\r\n//             <span className=\"text-gray-900\"> {label}</span>\r\n//           </MenuItem>\r\n//         </Typography>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// }\r\n \r\n// function ComplexNavbar() {\r\n//   const [isNavOpen, setIsNavOpen] = React.useState(false);\r\n \r\n//   const toggleIsNavOpen = () => setIsNavOpen((cur) => !cur);\r\n \r\n//   React.useEffect(() => {\r\n//     window.addEventListener(\r\n//       \"resize\",\r\n//       () => window.innerWidth >= 960 && setIsNavOpen(false),\r\n//     );\r\n//   }, []);\r\n \r\n//   return (\r\n//     <Navbar className=\"mx-auto max-w-screen-xl p-2 lg:rounded-full lg:pl-6\">\r\n//       <div className=\"relative mx-auto flex items-center justify-between text-blue-gray-900\">\r\n//         <Typography\r\n//           as=\"a\"\r\n//           href=\"#\"\r\n//           className=\"mr-4 ml-2 cursor-pointer py-1.5 font-medium\"\r\n//         >\r\n//           Material Tailwind\r\n//         </Typography>\r\n//         <div className=\"hidden lg:block\">\r\n//           <NavList />\r\n//         </div>\r\n//         <IconButton\r\n//           size=\"sm\"\r\n//           color=\"blue-gray\"\r\n//           variant=\"text\"\r\n//           onClick={toggleIsNavOpen}\r\n//           className=\"ml-auto mr-2 lg:hidden\"\r\n//         >\r\n//           <Bars2Icon className=\"h-6 w-6\" />\r\n//         </IconButton>\r\n \r\n//         <Button size=\"sm\" variant=\"text\">\r\n//           <span>Log In</span>\r\n//         </Button>\r\n//         <ProfileMenu />\r\n//       </div>\r\n//       <MobileNav open={isNavOpen} className=\"overflow-scroll\">\r\n//         <NavList />\r\n//       </MobileNav>\r\n//     </Navbar>\r\n//   );\r\n// }\r\n\r\n// export default ComplexNavbar;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}